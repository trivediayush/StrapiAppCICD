name: Deploy to AWS ECS Fargate

on:
  push:
    branches:
      - master

env:
  AWS_REGION: eu-north-1
  ECR_REPO: 711387111644.dkr.ecr.eu-north-1.amazonaws.com/mystrapi
  ECS_CLUSTER: strapi-cluster
  ECS_SERVICE: strapi-service
  CONTAINER_NAME: strapi

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Log in to Amazon ECR
      run: |
        aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REPO

    - name: Build and push Docker image
      working-directory: ./Terraform3/types
      run: |
        docker build -t mystrapi:latest .
        docker tag mystrapi:latest $ECR_REPO:latest
        docker push $ECR_REPO:latest

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Terraform Init
      working-directory: ./Terraform
      run: terraform init

    - name: Terraform Apply
      working-directory: ./Terraform
      run: terraform apply -auto-approve

    - name: Force ECS new deployment (fallback)
      run: |
        aws ecs update-service \
          --cluster $ECS_CLUSTER \
          --service $ECS_SERVICE \
          --force-new-deployment
